[align]
; guide:                        0|1 [1]
;                               Align only on C alphas
; method:                       super|align|tmalign|cealign [align]
;                               super does a sequence-independent (unlike align)
;                               structure-based dynamic programming alignment
;                               followed by a series of refinement cycles
;                               intended to improve the fit by eliminating
;                               pairing with high relative variability (just
;                               like align). super is more robust than align
;                               for proteins with low sequence similarity.
;                               align performs a sequence alignment followed
;                               by a structural superposition, and then carries
;                               out zero or more cycles of refinement in order
;                               to reject structural outliers found during the
;                               fit. align does a good job on proteins with
;                               decent sequence similarity (identity >30%).
;                               For comparing proteins with lower sequence
;                               identity, the super and cealign commands
;                               perform better.
method:                         align
guide:                          1

[visu]

[aver]
; all_states:                   0|1 [0]
;                               Show all states ?
; vdwspheres_radius:            float [0.5]
;                               Van der walls radius of spheres
; first:                        int [1]
;                               Number of the first state to include in
;                               averaging
; last:                         int [0]
;                               Number of the last state to include in averaging
;                               A value of '0' means use the last state in the
;                               object
; newobj:                       fit_all
;                               Desired name of the new output pymol object
;                               (i.e., averaged structure)
;                               NB: Defaults to name of object with string
;                               "_avg_AtoZ" appended, where A and Z are the
;                               numbers of the first and last frames included
;                               in the averaging
; fit:                          yes|no [yes]
;                               Use the pymol function intra_fit() to fit all
;                               the states of 'object & object_sel'.
;                               NB: The state specified as 'first' is taken as
;                               the reference state for the (optional)
;                               intra_fit() alignment. If no selection is given,
;                               the string "and name CA" will be appended to the
;                               object and the averaging and rmsd calculations
;                               will be restricted to "object and name CA"
;                               (i.e., C-alpha atoms). To avoid this default
;                               behavior, specify a valid pymol atom selection
;                               for the object_sel argument (e.g., "name CA" or
;                               "name CA and resi 20-50" or whatever).
; verb:                         0|1 [0]
;                               Verbosity level
; pairs:                        0|1 [1]
;                               Calculate average pairwise RMSD for each residue
;                               position
; writefiles:                   0|1 [0]
;                               Write calculated RMSD data to plain text files
all_states:                     0
vdwspheres_radius:              0.5
first:                          1
last:                           0
newobj:
fit:                            yes
verb:                           0
pairs:                          1
writefiles:                     0

[cnstr]
; ali_method:                   align|super|tmalign|cealign [align]
; eval_method:                  bound|contact [bound]
; contact_type:                 min|all [all]
;                               Show all atm-atm restraints or only res-res
;                               cnstr. If an extra field is given in args, this
;                               option is ignored
; contact:                      float [5.0]
;                               contact treshold in Angstrom defining if a
;                               restraint is FP or TP if reference pdb given.
;                               Otherwise, this treshold is used to define a
;                               a cnstr as violated or not.
ali_method:                     align
eval_method:                    bound
contact_type:                   min
contact:                        5.0
view:                           cartoon
color:                          gray
fp_color:                       red
tp_color:                       green
stick_radius:                   0.05
stick_alpha:                    0.7
dash_width:                     0.5
dash_gap:                       0.05